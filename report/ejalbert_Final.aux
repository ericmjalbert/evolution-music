\relax 
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Representation of a single note using 32 bits}}{1}}
\newlabel{fig:bitRepresentation}{{1}{1}}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces Algorithm for evolving songs; created by Eric Jalbert, implemented in Python.}}{1}}
\newlabel{alg:evolveSong}{{1}{1}}
\@writefile{loa}{\contentsline {algocf}{\numberline {2}{\ignorespaces Algorithm for initializing the population; created by Eric Jalbert, implemented in Python.}}{2}}
\newlabel{alg:initPop}{{2}{2}}
\@writefile{loa}{\contentsline {algocf}{\numberline {3}{\ignorespaces Algorithm for computing the fitness of a song; created by Eric Jalbert, implemented in Python.}}{2}}
\newlabel{alg:fitness}{{3}{2}}
\@writefile{loa}{\contentsline {algocf}{\numberline {4}{\ignorespaces Algorithm for mutating the population; created by Eric Jalbert, implemented in Python.}}{3}}
\newlabel{alg:mutations}{{4}{3}}
\@writefile{loa}{\contentsline {algocf}{\numberline {5}{\ignorespaces Algorithm for converting a series of 32 bits into an MP3; created by Eric Jalbert, implemented in Python.}}{3}}
\newlabel{alg:convert}{{5}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Different parameter settings gives different (a) average fitness and (b) maximum fitness. 'mnmXX' is the number of point mutations; 'numBestXX' is the number of top songs stored each generations; 'popXXX' is the population size.}}{4}}
\newlabel{fig:paramChange}{{2}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Different runs give similar (a) average fitness and (b) maximum fitness}}{4}}
\newlabel{fig:betweenRuns}{{3}{4}}
